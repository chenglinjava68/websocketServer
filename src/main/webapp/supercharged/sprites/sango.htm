<!DOCTYPE html>
<html>
<head>
<title>Sprite Demonstration</title>
<style type="text/css">
#draw-target {
	width: 480px;
	height: 320px;
	position: relative;
	background-image: url(map.jpg);
}
</style>
<script type="text/javascript">
	// IE6 background image caching fix.
	// Include this JavaScript a the top of your page.
	try {
		document.execCommand("BackgroundImageCache", false, true);
	} catch (e) {
	}
	
	//方便查询输出的log函数，这里可以根据你自己的实际情况，
	//去选择使用浏览器的alert或者浏览器支持的console.log
	function log(obj){
		//alert(obj);
		//console.info(obj);
		//console.log(obj);
		console.dir(obj);
	}
</script>

<script type="text/javascript" src="../../js/jquery-1.8.3.min.js"></script>

<script type="text/javascript">
	var timeInfo = function(goalFPS) {
		var oldTime, paused = true, 
			iterCount = 0, 
			totalFPS = 0;
		return {
			getInfo : function() {
				if (paused === true) {
					paused = false;
					oldTime = +new Date();
					return {
						elapsed : 0,
						coeff : 0,
						FPS : 0,
						averageFPS : 0
					};
				}

				var newTime = +new Date();
				var elapsed = newTime - oldTime;
					oldTime = newTime;
				var FPS = 1000 / elapsed;
				iterCount++;
				totalFPS += FPS;
				return {
					elapsed : elapsed,
					coeff : goalFPS / FPS,
					FPS : FPS,
					averageFPS : totalFPS / iterCount
				};
			},
			pause : function() {
				paused = true;
			}
		};
	};

	var DHTMLSprite = function(params) {
		var width = params.width, 
			height = params.height, 
			imagesWidth = params.imagesWidth, 
			$element = params.$drawTarget.append('<div/>').find(':last'), 
			elemStyle = $element[0].style, 
			mathFloor = Math.floor;
		$element.css({
			position : 'absolute',
			width : width,
			height : height,
			backgroundImage : 'url(' + params.images + ')'
		});
		var that = {
			draw : function(x, y) {
				elemStyle.left = x + 'px';
				elemStyle.top = y + 'px';
			},
			changeImage : function(index) {
				index *= width;
				var vOffset = -mathFloor(index / imagesWidth) * height;
				var hOffset = -index % imagesWidth;
				elemStyle.backgroundPosition = hOffset + 'px ' + vOffset + 'px';
			},
			show : function() {
				elemStyle.display = 'block';
			},
			hide : function() {
				elemStyle.display = 'none';
			},
			destroy : function() {
				$element.remove();
			}
		};
		return that;
	};
	
	var bouncySprite = function(params) {
		var id = params.id,
			x = params.x, 
			y = params.y, 
			xDir = params.xDir, 
			yDir = params.yDir, 
			//maxX = params.maxX, 
			//maxY = params.maxY, 
			animIndex = 0, 
			that = DHTMLSprite(params);
		
		that.isFiring = false;
		that.canFire = true;
		that.waitFireRelease = true;
		
		that.moveAndDraw = function(tCoeff) {
			//x += xDir * tCoeff;
			//y += yDir * tCoeff;
			
			//log(this.canFire+","+this.waitFireRelease+","+this.isFiring);
			if (this.canFire) {
				if (keys.fire) {
					if (!this.waitFireRelease) {
						this.isFiring = true;
						this.canFire = false;
						this.waitFireRelease = true;
					}
				} else {
					this.waitFireRelease = false;
	            }
			}
			
			if(this.isFiring){
				animIndex += xDir > 0 ? 1 * tCoeff : -1 * tCoeff;
				var animIndex2 = (animIndex % 4) >> 0;
				animIndex2 += animIndex2 < 0 ? 4 : 0;
				log(id+","+this.isFiring+","+this.waitFireRelease+","+animIndex2);
				if (animIndex2 == 3) {
					this.isFiring = false;
					this.canFire = true;
					animIndex = 0;
				}
			}

			//if ((xDir < 0 && x < 0) || (xDir > 0 && x >= maxX)) {
			//xDir = -xDir;
			//}
			//if ((yDir < 0 && y < 0) || (yDir > 0 && y >= maxY)) {
			//yDir = -yDir;
			//}
			that.changeImage(animIndex2);
			that.draw(x, y);
		};
		return that;
	};

	var bouncyBoss = function(numBouncy, $drawTarget) {
		var bouncys = [], timer = timeInfo(40);

		for (var i = 0; i < numBouncy; i++) {
			bouncys.push(bouncySprite({
				id : i,
				images : 'guan_horse.png', //'cogs.png',
				imagesWidth : 256,
				width : 64,
				height : 64,
				$drawTarget : $drawTarget,
				x : Math.random() * ($drawTarget.width() - 64),
				y : Math.random() * ($drawTarget.height() - 64),
				xDir : Math.random() * 4 - 2,
				yDir : Math.random() * 4 - 2,
				maxX : $drawTarget.width() - 64,
				maxY : $drawTarget.height() - 64
			}));
		}

		var moveAll = function() {
			var timeData = timer.getInfo();
			var len = bouncys.length;
			for (var i = 0; i < len; i++) {
				bouncys[i].moveAndDraw(timeData.coeff);
			}
			$('#info1').text('FPS: ' + Math.floor(timeData.FPS));
			$('#info2').text('Average FPS: ' + Math.floor(timeData.averageFPS));
			$('#info3').text('Time Coefficient: ' + timeData.coeff.toFixed(2));
			setTimeout(moveAll, 15);
		}

		moveAll();
	};

	// Key input.
	var keys = function() {
		var keyMap = {
			//'90': 'left',
			//'88': 'right',
			//'77': 'fire'
			'37' : 'left',
			'39' : 'right',
			'13' : 'fire'
		}, kInfo = {
			'left' : 0,
			'right' : 0,
			'fire' : 0
		}, key;
		$(document).bind('keydown keyup', function(event) {
			key = '' + event.which;
			if (keyMap[key] !== undefined) {
				kInfo[keyMap[key]] = event.type === 'keydown' ? 1 : 0;
				log(event.type+"-"+keys.fire);
				return false;
			}
		});
		return kInfo;
	}();

	$(document).ready(function() {
		bouncyBoss(2, $('#draw-target'));
	});
</script>
</head>
<body>
	<p>DHTML Demonstration. Lots of spites moved and animated with
		time-adjustment. The speed of movement is adjusted so it looks like a
		consistent 40 frames per second update across different browsers and
		hardware. The actual frames per second achieved is shown below.</p>
	<p>
		<a href='/book'><<< Back</a>
	</p>
	<div id="draw-target"></div>
	<p id="info1"></p>
	<p id="info2"></p>
	<p id="info3"></p>
</body>
</html>